


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         
    4 00000000                 AREA             subroutine,CODE,READONLY
    5 00000000                 THUMB
    6 00000000                 EXPORT           portals
    7 00000000         
    8 00000000         portals PROC
    9 00000000         ;PUSH {LR}
   10 00000000 2800            CMP              R0, #0      ;compare r0 to 0
   11 00000002 D07C            BEQ              FINISH      ;if it is zero, go 
                                                            to finish
   12 00000004 F04F 0400       MOV              R4, #0      ;mode register
   13 00000008 F04F 0200       MOV              R2, #0
   14 0000000C F04F 0700       MOV              R7, #0
   15 00000010 2863            CMP              R0, #99     ;compare r0 to 99
   16 00000012 D901            BLS              START1      ;if less than 99, g
                                                            o to start1
   17 00000014 F104 0401       ADD              R4, #1      ;if not, add mode r
                                                            egister 1
   18 00000018         
   19 00000018         START1
   20 00000018 F000 0201       AND              R2, R0, #1  ;and r0 and 1, to f
                                                            ind out whether num
                                                            ber is odd or not
   21 0000001C 2A01            CMP              R2, #1
   22 0000001E D002            BEQ              START2      ;if not odd number,
                                                             go to start2
   23 00000020 F104 0404       ADD              R4, #4      ;if odd, add 2 to m
                                                            ode register
   24 00000024 E003            B                START3      ;and go to start3
   25 00000026         
   26 00000026         START2
   27 00000026 2832            CMP              R0, #50     ;compare with 50
   28 00000028 D901            BLS              START3      ;if less than 50, g
                                                            o to start3
   29 0000002A F104 0402       ADD              R4, #2      ;if not, add 4 to m
                                                            ode register
   30 0000002E         
   31 0000002E F04F 0207 
                       START3  MOV              R2, #7      ;r2 = 7
   32 00000032 FBB0 F7F2       UDIV             R7, R0, R2  ;r7 = r0/7
   33 00000036 FB07 F702       MUL              R7, R2      ;r7 = r7*7
   34 0000003A 1A3F            SUBS             R7, R0      ;r7 = r7 - r0 ==>re
                                                            sult 0, then, numbe
                                                            r is multiple of 7
   35 0000003C D101            BNE              MAIN        ;if not, go main
   36 0000003E F104 0408       ADD              R4, #8      ;if it is, add 8 to
                                                             mode register
   37 00000042         
   38 00000042         
   39 00000042         MAIN
   40 00000042 F014 0708       ANDS             R7, R4, #8  ;
   41 00000046 2F08            CMP              R7, #8      ;if mode register h
                                                            as 8
   42 00000048 D046            BEQ              PORTAL4     ;go to portal4
   43 0000004A F014 0701       ANDS             R7, R4, #1
   44 0000004E 2F01            CMP              R7, #1      ;if mode register h
                                                            as 1



ARM Macro Assembler    Page 2 


   45 00000050 D008            BEQ              PORTAL1     ;go to portal1
   46 00000052 F014 0702       ANDS             R7, R4, #2
   47 00000056 2F02            CMP              R7, #2      ;if mode register h
                                                            as 2
   48 00000058 D010            BEQ              PORTAL2     ;go to portal2
   49 0000005A F014 0704       ANDS             R7, R4, #4
   50 0000005E 2F04            CMP              R7, #4      ;if mode register h
                                                            as 4
   51 00000060 D02D            BEQ              PORTAL3     ;go to portal3
   52 00000062 E04C            B                FINISH
   53 00000064         
   54 00000064         
   55 00000064 B401    PORTAL1 PUSH             {R0}
   56 00000066 382F            SUBS             R0, #47     ;r0 = r0 - 47
   57 00000068 F1A4 0401       SUB              R4, #1      ;r4 = r4 - 1
   58 0000006C B410            PUSH             {R4}
   59 0000006E B500            PUSH             {LR}
   60 00000070 E7FE            B                portals     ;go to portals
   61 00000072 F85D EB04       POP              {LR}
   62 00000076 BC10            POP              {R4}
   63 00000078 BC01            POP              {R0}
   64 0000007A E7E2            B                MAIN
   65 0000007C         
   66 0000007C B401    PORTAL2 PUSH             {R0}
   67 0000007E F04F 030A       MOV              R3, #10     ;r3 = 10
   68 00000082 F04F 0201       MOV              R2, #1      ;r2 = 1
   69 00000086 F04F 0701       MOV              R7, #1
   70 0000008A FBB0 F8F3 
                       loop1   UDIV             R8, R0, R3  ;r8 = r0 / r3
   71 0000008E 2800            CMP              R0, #0      ;compare with 0
   72 00000090 D008            BEQ              PORTAL2END  ;if 0, go to portal
                                                            2end
   73 00000092 FB08 0913       MLS              R9, R8, R3, R0 
                                                            ;r9 = r0 - r8 * r3
   74 00000096 4640            MOV              R0, R8      ;r0 = r8
   75 00000098 F1B9 0F00       CMP              R9, #0
   76 0000009C D0F5            BEQ              loop1       ;if r9 = 0, go to l
                                                            oop1
   77 0000009E FB07 F709       MUL              R7, R9      ;if not, r7 = r7 * 
                                                            r9
   78 000000A2 E7F2            B                loop1       ;go to loop1
   79 000000A4 BC01    PORTAL2END
                               POP              {R0}
   80 000000A6 EBA0 0007       SUB              R0,R7       ;r0 = r0 - r7
   81 000000AA F1A4 0402       SUB              R4,#2       ;r4 = r4 - 2
   82 000000AE B410            PUSH             {R4}
   83 000000B0 B500            PUSH             {LR}
   84 000000B2 E7FE            B                portals
   85 000000B4 F85D EB04       POP              {LR}
   86 000000B8 BC10            POP              {R4}
   87 000000BA BC01            POP              {R0}
   88 000000BC E7C1            B                MAIN
   89 000000BE         
   90 000000BE B401    PORTAL3 PUSH             {R0}
   91 000000C0 EA4F 0050       LSR              R0, #1      ;r0 = r0 / 2
   92 000000C4 F1A4 0404       SUB              R4, #4      ;r4 = r4 - 4
   93 000000C8 B410            PUSH             {R4}
   94 000000CA B500            PUSH             {LR}
   95 000000CC E7FE            B                portals



ARM Macro Assembler    Page 3 


   96 000000CE F85D EB04       POP              {LR}
   97 000000D2 BC10            POP              {R4}
   98 000000D4 BC01            POP              {R0}
   99 000000D6 E7B4            B                MAIN
  100 000000D8         
  101 000000D8         PORTAL4
  102 000000D8 B401            PUSH             {R0}
  103 000000DA F04F 0203       MOV              R2,#3       ;r2 = 3
  104 000000DE FBB0 F3F2       UDIV             R3, R0, R2  ;r3 = r0 / 3
  105 000000E2 FB03 F302       MUL              R3, R2      ;r3 = r3 * 3
  106 000000E6 EBA0 0003       SUB              R0, R3      ;r0 = r0 - r3
  107 000000EA F1A4 0408       SUB              R4, #8      ;r4 = r4 - 8
  108 000000EE B410            PUSH             {R4}
  109 000000F0 B500            PUSH             {LR}
  110 000000F2 E7FE            B                portals
  111 000000F4 F85D EB04       POP              {LR}
  112 000000F8 BC10            POP              {R4}
  113 000000FA BC01            POP              {R0}
  114 000000FC E7A1            B                MAIN
  115 000000FE         
  116 000000FE         FINISH
  117 000000FE 4286            CMP              R6, R0      ;compare input numb
                                                            er and result numbe
                                                            r
  118 00000100 D900            BLS              BACK        ;if r6 < r0, go to 
                                                            back
  119 00000102 4606            MOV              R6, R0      ;r6 = r0
  120 00000104         
  121 00000104         BACK                                 ;POP  {LR}
  122 00000104 4770            BX               LR
  123 00000106         
  124 00000106         
  125 00000106                 ENDP
  126 00000106                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\portals.d -o.\objects\portals.o -I.\RTE\_Target_1 -IC
:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\
CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 5
26" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\portals.lst portals.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BACK 00000104

Symbol: BACK
   Definitions
      At line 121 in file portals.s
   Uses
      At line 118 in file portals.s
Comment: BACK used once
FINISH 000000FE

Symbol: FINISH
   Definitions
      At line 116 in file portals.s
   Uses
      At line 11 in file portals.s
      At line 52 in file portals.s

MAIN 00000042

Symbol: MAIN
   Definitions
      At line 39 in file portals.s
   Uses
      At line 35 in file portals.s
      At line 64 in file portals.s
      At line 88 in file portals.s
      At line 99 in file portals.s
      At line 114 in file portals.s

PORTAL1 00000064

Symbol: PORTAL1
   Definitions
      At line 55 in file portals.s
   Uses
      At line 45 in file portals.s
Comment: PORTAL1 used once
PORTAL2 0000007C

Symbol: PORTAL2
   Definitions
      At line 66 in file portals.s
   Uses
      At line 48 in file portals.s
Comment: PORTAL2 used once
PORTAL2END 000000A4

Symbol: PORTAL2END
   Definitions
      At line 79 in file portals.s
   Uses
      At line 72 in file portals.s
Comment: PORTAL2END used once
PORTAL3 000000BE

Symbol: PORTAL3
   Definitions
      At line 90 in file portals.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 51 in file portals.s
Comment: PORTAL3 used once
PORTAL4 000000D8

Symbol: PORTAL4
   Definitions
      At line 101 in file portals.s
   Uses
      At line 42 in file portals.s
Comment: PORTAL4 used once
START1 00000018

Symbol: START1
   Definitions
      At line 19 in file portals.s
   Uses
      At line 16 in file portals.s
Comment: START1 used once
START2 00000026

Symbol: START2
   Definitions
      At line 26 in file portals.s
   Uses
      At line 22 in file portals.s
Comment: START2 used once
START3 0000002E

Symbol: START3
   Definitions
      At line 31 in file portals.s
   Uses
      At line 24 in file portals.s
      At line 28 in file portals.s

loop1 0000008A

Symbol: loop1
   Definitions
      At line 70 in file portals.s
   Uses
      At line 76 in file portals.s
      At line 78 in file portals.s

portals 00000000

Symbol: portals
   Definitions
      At line 8 in file portals.s
   Uses
      At line 6 in file portals.s
      At line 60 in file portals.s
      At line 84 in file portals.s
      At line 95 in file portals.s
      At line 110 in file portals.s

subroutine 00000000

Symbol: subroutine



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 4 in file portals.s
   Uses
      None
Comment: subroutine unused
14 symbols
348 symbols in table
