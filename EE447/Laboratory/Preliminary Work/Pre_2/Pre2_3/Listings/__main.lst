


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000 00000010 
                       OFFSET  EQU              0x10
    4 00000000 20000480 
                       FIRST   EQU              0x20000480
    5 00000000 20000410 
                       STORE   EQU              0x20000410
    6 00000000 400053FC 
                       GPIO_PORTB_DATA
                               EQU              0x400053FC
    7 00000000 40005400 
                       GPIO_PORTB_DIR
                               EQU              0x40005400
    8 00000000 40005420 
                       GPIO_PORTB_AFSEL
                               EQU              0x40005420
    9 00000000 4000551C 
                       GPIO_PORTB_DEN
                               EQU              0x4000551C
   10 00000000 40005510 
                       GPIO_PORTB_PUR
                               EQU              0x40005510
   11 00000000 40005514 
                       GPIO_PORTB_PDR
                               EQU              0x40005514
   12 00000000 0000000F 
                       IOB     EQU              0x0F
   13 00000000 400FE608 
                       SYSCTL_RCGCGPIO
                               EQU              0x400FE608
   14 00000000         
   15 00000000         
   16 00000000         
   17 00000000                 AREA             sdata, DATA, READONLY
   18 00000000                 THUMB
   19 00000000 10      CTR1    DCB              0x10
   20 00000001 43 6F 70 
              79 69 6E 
              67 20 74 
              61 62 6C 
              65 2E 2E 
              2E       MSG     DCB              "Copying table..."
   21 00000011 0D              DCB              0x0D
   22 00000012 04              DCB              0x04
   23 00000013         ;*******************************************************
                       ********
   24 00000013         ; Program section           
   25 00000013         ;*******************************************************
                       ********
   26 00000013         ;LABEL  DIRECTIVE VALUE  COMMENT
   27 00000013                 AREA             main, READONLY, CODE
   28 00000000                 THUMB
   29 00000000                 EXTERN           OutStr      ; Reference externa
                                                            l subroutine 
   30 00000000                 EXTERN           InChar      ; Serial input Adde
                                                            d
   31 00000000                 EXTERN           DELAY       ;
   32 00000000                 EXPORT           __main      ; Make available



ARM Macro Assembler    Page 2 


   33 00000000         
   34 00000000         __main
   35 00000000 4958    Start   LDR              R1 , =SYSCTL_RCGCGPIO
   36 00000002 6808            LDR              R0 , [ R1 ]
   37 00000004 F040 0002       ORR              R0 , R0 , #0x2 ;Port B clock en
                                                            abled
   38 00000008 6008            STR              R0 , [ R1 ]
   39 0000000A BF00            NOP                          ;Wait for clock to 
                                                            stabilize
   40 0000000C BF00            NOP
   41 0000000E BF00            NOP
   42 00000010 4955            LDR              R1 , =GPIO_PORTB_DIR ; 
   43 00000012 6808            LDR              R0 , [ R1 ]
   44 00000014 F020 00FF       BIC              R0 , #0xFF
   45 00000018 F040 000F       ORR              R0 , #IOB   ;00001111 1->output
                                                            
   46 0000001C 6008            STR              R0 , [ R1 ]
   47 0000001E 4953            LDR              R1 , =GPIO_PORTB_AFSEL
   48 00000020 6808            LDR              R0 , [ R1 ]
   49 00000022 F020 00FF       BIC              R0 , #0xFF
   50 00000026 6008            STR              R0 , [ R1 ]
   51 00000028 4951            LDR              R1 , =GPIO_PORTB_DEN
   52 0000002A 6808            LDR              R0 , [ R1 ]
   53 0000002C F040 00FF       ORR              R0 , #0xFF
   54 00000030 6008            STR              R0 , [ R1 ]
   55 00000032 4950            LDR              R1 , =GPIO_PORTB_PUR
   56 00000034 6808            LDR              R0 , [ R1 ]
   57 00000036 F040 00F0       ORR              R0 , #0xF0
   58 0000003A 6008            STR              R0 , [ R1 ]
   59 0000003C         
   60 0000003C 494E    Begin   LDR              R1,=GPIO_PORTB_DATA ; Data addr
                                                            ess in R1
   61 0000003E F04F 0000       MOV              R0,#0x00
   62 00000042 6008            STR              R0,[R1]     ; All outputs GND
   63 00000044 F04F 0200       MOV              R2,#0       ;  R2 is the switch
                                                             ID
   64 00000048 6808    InputCheck
                               LDR              R0,[R1]     ;Checks for any inp
                                                            ut
   65 0000004A EA4F 1010       LSR              R0,#4       ;
   66 0000004E 0840            LSRS             R0,#1       ;
   67 00000050 D306            BCC              Delay100
   68 00000052 0840            LSRS             R0,#1       ;
   69 00000054 D304            BCC              Delay100
   70 00000056 0840            LSRS             R0,#1       ;
   71 00000058 D302            BCC              Delay100
   72 0000005A 0840            LSRS             R0,#1       ;
   73 0000005C D300            BCC              Delay100
   74 0000005E E7F3            B                InputCheck
   75 00000060 F646 2000 
              F2C0 0018 
                       Delay100
                               MOV32            R0,#1600000 ;If any input is de
                                                            tected
   76 00000068 F7FF FFFE       BL               DELAY
   77 0000006C 6808            LDR              R0,[R1]     ; Check Again
   78 0000006E EA4F 1010       LSR              R0,#4       ;
   79 00000072 0840            LSRS             R0,#1       ;
   80 00000074 D306            BCC              Detect      ; If input is detec



ARM Macro Assembler    Page 3 


                                                            ted again go Detect
                                                            
   81 00000076 0840            LSRS             R0,#1       ;
   82 00000078 D304            BCC              Detect
   83 0000007A 0840            LSRS             R0,#1       ;
   84 0000007C D302            BCC              Detect
   85 0000007E 0840            LSRS             R0,#1       ;
   86 00000080 D300            BCC              Detect
   87 00000082 E7E1            B                InputCheck
   88 00000084 493C    Detect  LDR              R1,=GPIO_PORTB_DATA ; Lets chec
                                                            k inputs for differ
                                                            ent outputs
   89 00000086 F04F 000E       MOV              R0,#0x0E    ;output 1110
   90 0000008A 6008            STR              R0,[R1]     ;
   91 0000008C F646 2000 
              F2C0 0018        MOV32            R0,#1600000 ;
   92 00000094 F7FF FFFE       BL               DELAY
   93 00000098 F000 F822       BL               Which       ;Which decides whic
                                                            h input is reading
   94 0000009C F04F 000D       MOV              R0,#0x0D    ;output 1101
   95 000000A0 6008            STR              R0,[R1]     ;
   96 000000A2 F646 2000 
              F2C0 0018        MOV32            R0,#1600000 ;
   97 000000AA F7FF FFFE       BL               DELAY
   98 000000AE F000 F817       BL               Which
   99 000000B2 F04F 000B       MOV              R0,#0x0B    ;output 1011
  100 000000B6 6008            STR              R0,[R1]     ;
  101 000000B8 F646 2000 
              F2C0 0018        MOV32            R0,#1600000 ;
  102 000000C0 F7FF FFFE       BL               DELAY
  103 000000C4 F000 F80C       BL               Which
  104 000000C8 F04F 0007       MOV              R0,#0x07    ;output 0111
  105 000000CC 6008            STR              R0,[R1]     ;
  106 000000CE F646 2000 
              F2C0 0018        MOV32            R0,#1600000 ;
  107 000000D6 F7FF FFFE       BL               DELAY
  108 000000DA F000 F801       BL               Which
  109 000000DE E7AD            B                Begin
  110 000000E0 6808    Which   LDR              R0,[R1]     ;
  111 000000E2 EA4F 1010       LSR              R0,#4       ;
  112 000000E6 0840            LSRS             R0,#1       ;
  113 000000E8 D30E            BCC              NextStep    ; If Carry is zero 
                                                            go NextStep
  114 000000EA F102 0201       ADD              R2,R2,#1    ;
  115 000000EE 0840            LSRS             R0,#1       ;
  116 000000F0 D30A            BCC              NextStep    ;
  117 000000F2 F102 0201       ADD              R2,R2,#1    ;
  118 000000F6 0840            LSRS             R0,#1       ;
  119 000000F8 D306            BCC              NextStep    ;
  120 000000FA F102 0201       ADD              R2,R2,#1    ;
  121 000000FE 0840            LSRS             R0,#1       ;
  122 00000100 D302            BCC              NextStep    ;
  123 00000102 F102 0201       ADD              R2,R2,#1    ;
  124 00000106 4770            BX               LR
  125 00000108         
  126 00000108         
  127 00000108 6808    NextStep
                               LDR              R0,[R1]     ; It checks for if 
                                                            the switch is open 



ARM Macro Assembler    Page 4 


                                                            again
  128 0000010A EA4F 1010       LSR              R0,#4       ;
  129 0000010E 0840            LSRS             R0,#1       ;
  130 00000110 D3FA            BCC              NextStep    ; If it is not open
                                                            
  131 00000112 0840            LSRS             R0,#1       ;
  132 00000114 D3F8            BCC              NextStep    ;
  133 00000116 0840            LSRS             R0,#1       ;
  134 00000118 D3F6            BCC              NextStep    ;
  135 0000011A 0840            LSRS             R0,#1       ;
  136 0000011C D3F4            BCC              NextStep    ;
  137 0000011E         ;If all inputs show 1 that is no input comes
  138 0000011E F646 2000 
              F2C0 0018        MOV32            R0,#1600000 ;
  139 00000126 F7FF FFFE       BL               DELAY
  140 0000012A 6808            LDR              R0,[R1]     ; Checks again to b
                                                            e sure
  141 0000012C EA4F 1010       LSR              R0,#4       ;
  142 00000130 0840            LSRS             R0,#1       ;
  143 00000132 D383            BCC              Begin       ;  If any input is 
                                                            read again
  144 00000134 0840            LSRS             R0,#1       ;
  145 00000136 D381            BCC              Begin       ;
  146 00000138 0840            LSRS             R0,#1       ;
  147 0000013A F4FF AF7F       BCC              Begin       ;
  148 0000013E 0840            LSRS             R0,#1       ;
  149 00000140 F4FF AF7C       BCC              Begin       ;
  150 00000144         ;If no input is detected then in R2 we have the switch I
                       D
  151 00000144 490D            LDR              R1,=FIRST
  152 00000146 2A0A            CMP              R2,#10
  153 00000148 BFB4 3230       ADDLT            R2,R2,#0x30 ; ASCII code modifi
                                                            ed
  154 0000014C 3237            ADDGE            R2,R2,#0x37 ;
  155 0000014E 600A            STR              R2,[R1]     ; R2 is stored to w
                                                            here R0 points
  156 00000150 460D            MOV              R5,R1       ;  OutStr modificat
                                                            ion
  157 00000152 F101 0101       ADD              R1,R1,#1    ;
  158 00000156 F04F 0204       MOV              R2,#0x04    ;
  159 0000015A 600A            STR              R2,[R1]     ; End setup for Out
                                                            Str
  160 0000015C F7FF FFFE       BL               OutStr
  161 00000160 E76C            B                Begin       ;  Go back
  162 00000162         
  163 00000162         ;*******************************************************
                       ********
  164 00000162         ; End of the program  section
  165 00000162         ;*******************************************************
                       ********
  166 00000162         ;LABEL      DIRECTIVE       VALUE                       
                           COMMENT
  167 00000162 00 00           ALIGN
  168 00000164                 END
              400FE608 
              40005400 
              40005420 
              4000551C 
              40005510 



ARM Macro Assembler    Page 5 


              400053FC 
              20000480 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CTR1 00000000

Symbol: CTR1
   Definitions
      At line 19 in file __main.s
   Uses
      None
Comment: CTR1 unused
MSG 00000001

Symbol: MSG
   Definitions
      At line 20 in file __main.s
   Uses
      None
Comment: MSG unused
sdata 00000000

Symbol: sdata
   Definitions
      At line 17 in file __main.s
   Uses
      None
Comment: sdata unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Begin 0000003C

Symbol: Begin
   Definitions
      At line 60 in file __main.s
   Uses
      At line 109 in file __main.s
      At line 143 in file __main.s
      At line 145 in file __main.s
      At line 147 in file __main.s
      At line 149 in file __main.s
      At line 161 in file __main.s

Delay100 00000060

Symbol: Delay100
   Definitions
      At line 75 in file __main.s
   Uses
      At line 67 in file __main.s
      At line 69 in file __main.s
      At line 71 in file __main.s
      At line 73 in file __main.s

Detect 00000084

Symbol: Detect
   Definitions
      At line 88 in file __main.s
   Uses
      At line 80 in file __main.s
      At line 82 in file __main.s
      At line 84 in file __main.s
      At line 86 in file __main.s

InputCheck 00000048

Symbol: InputCheck
   Definitions
      At line 64 in file __main.s
   Uses
      At line 74 in file __main.s
      At line 87 in file __main.s

NextStep 00000108

Symbol: NextStep
   Definitions
      At line 127 in file __main.s
   Uses
      At line 113 in file __main.s
      At line 116 in file __main.s
      At line 119 in file __main.s
      At line 122 in file __main.s
      At line 130 in file __main.s
      At line 132 in file __main.s
      At line 134 in file __main.s
      At line 136 in file __main.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Start 00000000

Symbol: Start
   Definitions
      At line 35 in file __main.s
   Uses
      None
Comment: Start unused
Which 000000E0

Symbol: Which
   Definitions
      At line 110 in file __main.s
   Uses
      At line 93 in file __main.s
      At line 98 in file __main.s
      At line 103 in file __main.s
      At line 108 in file __main.s

__main 00000000

Symbol: __main
   Definitions
      At line 34 in file __main.s
   Uses
      At line 32 in file __main.s
Comment: __main used once
main 00000000

Symbol: main
   Definitions
      At line 27 in file __main.s
   Uses
      None
Comment: main unused
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FIRST 20000480

Symbol: FIRST
   Definitions
      At line 4 in file __main.s
   Uses
      At line 151 in file __main.s
Comment: FIRST used once
GPIO_PORTB_AFSEL 40005420

Symbol: GPIO_PORTB_AFSEL
   Definitions
      At line 8 in file __main.s
   Uses
      At line 47 in file __main.s
Comment: GPIO_PORTB_AFSEL used once
GPIO_PORTB_DATA 400053FC

Symbol: GPIO_PORTB_DATA
   Definitions
      At line 6 in file __main.s
   Uses
      At line 60 in file __main.s
      At line 88 in file __main.s

GPIO_PORTB_DEN 4000551C

Symbol: GPIO_PORTB_DEN
   Definitions
      At line 9 in file __main.s
   Uses
      At line 51 in file __main.s
Comment: GPIO_PORTB_DEN used once
GPIO_PORTB_DIR 40005400

Symbol: GPIO_PORTB_DIR
   Definitions
      At line 7 in file __main.s
   Uses
      At line 42 in file __main.s
Comment: GPIO_PORTB_DIR used once
GPIO_PORTB_PDR 40005514

Symbol: GPIO_PORTB_PDR
   Definitions
      At line 11 in file __main.s
   Uses
      None
Comment: GPIO_PORTB_PDR unused
GPIO_PORTB_PUR 40005510

Symbol: GPIO_PORTB_PUR
   Definitions
      At line 10 in file __main.s
   Uses
      At line 55 in file __main.s
Comment: GPIO_PORTB_PUR used once
IOB 0000000F




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: IOB
   Definitions
      At line 12 in file __main.s
   Uses
      At line 45 in file __main.s
Comment: IOB used once
OFFSET 00000010

Symbol: OFFSET
   Definitions
      At line 3 in file __main.s
   Uses
      None
Comment: OFFSET unused
STORE 20000410

Symbol: STORE
   Definitions
      At line 5 in file __main.s
   Uses
      None
Comment: STORE unused
SYSCTL_RCGCGPIO 400FE608

Symbol: SYSCTL_RCGCGPIO
   Definitions
      At line 13 in file __main.s
   Uses
      At line 35 in file __main.s
Comment: SYSCTL_RCGCGPIO used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DELAY 00000000

Symbol: DELAY
   Definitions
      At line 31 in file __main.s
   Uses
      At line 76 in file __main.s
      At line 92 in file __main.s
      At line 97 in file __main.s
      At line 102 in file __main.s
      At line 107 in file __main.s
      At line 139 in file __main.s

InChar 00000000

Symbol: InChar
   Definitions
      At line 30 in file __main.s
   Uses
      None
Comment: InChar unused
OutStr 00000000

Symbol: OutStr
   Definitions
      At line 29 in file __main.s
   Uses
      At line 160 in file __main.s
Comment: OutStr used once
3 symbols
362 symbols in table
