


ARM Macro Assembler    Page 1 


    1 00000000 400053FC 
                       GPIO_PORTB_DATA
                               EQU              0x400053FC
    2 00000000         
    3 00000000         ; 16/32 Timer Registers
    4 00000000 40031000 
                       TIMER1_CFG
                               EQU              0x40031000  ; Configuration Reg
                                                            ister
    5 00000000 40031004 
                       TIMER1_TAMR
                               EQU              0x40031004  ; Mode Register
    6 00000000 4003100C 
                       TIMER1_CTL
                               EQU              0x4003100C  ; Control Register
    7 00000000 4003101C 
                       TIMER1_RIS
                               EQU              0x4003101C  ; Raw interrupt Sta
                                                            tus
    8 00000000 40031024 
                       TIMER1_ICR
                               EQU              0x40031024  ; Interrupt Clear R
                                                            egister
    9 00000000 40031028 
                       TIMER1_TAILR
                               EQU              0x40031028  ; Interval Load Reg
                                                            ister
   10 00000000 40031030 
                       TIMER1_TAMATCHR
                               EQU              0x40031030  ; Match Register
   11 00000000 40031038 
                       TIMER1_TAPR
                               EQU              0x40031038  ; Prescaling Divide
                                                            r
   12 00000000 40031048 
                       TIMER1_TAR
                               EQU              0x40031048  ; Counter Register
   13 00000000 40031018 
                       TIMER1_IMR
                               EQU              0x40031018  ; Defining Interrup
                                                            t
   14 00000000 40031050 
                       TIMER1_TAV
                               EQU              0x40031050  ; To set the timer 
                                                            initial value
   15 00000000         
   16 00000000 20000480 
                       FIRST   EQU              0x20000480
   17 00000000 00F42400 
                       FREQ    EQU              0x00F42400  ; Freq 16M
   18 00000000                 AREA             sdata , DATA, READONLY
   19 00000000                 THUMB
   20 00000000 50 55 4C 
              53 45 20 
              57 49 44 
              54 48 20 MSG     DCB              "PULSE WIDTH "
   21 0000000C 0D              DCB              0x0D
   22 0000000D 04              DCB              0x04
   23 0000000E 50 45 52 



ARM Macro Assembler    Page 2 


              49 4F 44 
              20       MSG1    DCB              "PERIOD "
   24 00000015 0D              DCB              0x0D
   25 00000016 04              DCB              0x04
   26 00000017 44 55 54 
              59 20 43 
              59 43 4C 
              45 20 25 
              20       MSG2    DCB              "DUTY CYCLE % "
   27 00000024 0D              DCB              0x0D
   28 00000025 04              DCB              0x04
   29 00000026         ;LABEL  DIRECTIVE VALUE  COMMENT
   30 00000026                 AREA             main, READONLY, CODE
   31 00000000                 THUMB
   32 00000000                 EXTERN           PULSE_INIT  ; Pulse initializat
                                                            ion
   33 00000000                 EXTERN           READ_INIT
   34 00000000                 EXTERN           OutStr
   35 00000000                 EXTERN           CONVRT
   36 00000000                 EXPORT           __main      ; Make available
   37 00000000         
   38 00000000         __main
   39 00000000 F7FF FFFE       BL               READ_INIT   ; initialize read
   40 00000004 F7FF FFFE       BL               PULSE_INIT  ; initialize pulse
   41 00000008 F04F 0000       MOV              R0,#0       ; R0 is turn counte
                                                            r 
   42 0000000C F04F 0700       MOV              R7, #0
   43 00000010 F04F 0800       MOV              R8, #0
   44 00000014 F04F 0600       MOV              R6, #0
   45 00000018 B401            PUSH             {R0}
   46 0000001A         
   47 0000001A 4930    loop    LDR              R1, =TIMER1_RIS
   48 0000001C 680A            LDR              R2, [R1]
   49 0000001E F012 0204       ANDS             R2, #04     ; isolate CAERIS bi
                                                            t
   50 00000022 D0FA            BEQ              loop        ; if no capture, th
                                                            en loop
   51 00000024         
   52 00000024 492E            LDR              R1, =TIMER1_ICR ;
   53 00000026 F042 0204       ORR              R2, #0x04   ; by setting CAECIN
                                                            T bit to 1, CAERIS 
                                                            bir is cleared
   54 0000002A 600A            STR              R2, [R1]
   55 0000002C 492D            LDR              R1, =GPIO_PORTB_DATA
   56 0000002E 680A            LDR              R2, [R1]
   57 00000030 492D            LDR              R1, =TIMER1_TAR ; address of ti
                                                            mer register
   58 00000032 6808            LDR              R0, [R1]    ; Get timer registe
                                                            r value 
   59 00000034 2A10            CMP              R2, #0x10
   60 00000036 BF08 2701       MOVEQ            R7, #1
   61 0000003A 2F01            CMP              R7, #1
   62 0000003C D006            BEQ              NEGATIVE
   63 0000003E D1FF            BNE              POSITIVE
   64 00000040         
   65 00000040         POSITIVE
   66 00000040 F04F 0800       MOV              R8, #0
   67 00000044 4680            MOV              R8, R0      ; R4 0width >-_-<
   68 00000046 F04F 0701       MOV              R7, #1



ARM Macro Assembler    Page 3 


   69 0000004A E005            B                CONT
   70 0000004C         NEGATIVE
   71 0000004C F04F 0600       MOV              R6, #0
   72 00000050 4606            MOV              R6, R0      ; R4 0width >-_-<
   73 00000052 F04F 0700       MOV              R7, #0
   74 00000056 E7E0            B                loop
   75 00000058         
   76 00000058         CONT
   77 00000058 E92D 01E0       PUSH             {R5, R6, R7, R8}
   78 0000005C 4D23            LDR              R5,=MSG
   79 0000005E F7FF FFFE       BL               OutStr
   80 00000062 E8BD 01E0       POP              {R5, R6, R7, R8}
   81 00000066 F04F 0400       MOV              R4, #0
   82 0000006A 4444            ADD              R4, R8
   83 0000006C E92D 01E0       PUSH             {R5, R6, R7, R8}
   84 00000070 4D1F            LDR              R5,=FIRST   ;
   85 00000072 F7FF FFFE       BL               CONVRT
   86 00000076 4D1E            LDR              R5,=FIRST   ;   
   87 00000078         ;PUSH{LR}
   88 00000078 F7FF FFFE       BL               OutStr
   89 0000007C         ;POP{LR}
   90 0000007C E8BD 01E0       POP              {R5, R6, R7, R8}
   91 00000080 E92D 01E0       PUSH             {R5, R6, R7, R8}
   92 00000084 4D1B            LDR              R5,=MSG1
   93 00000086 F7FF FFFE       BL               OutStr
   94 0000008A E8BD 01E0       POP              {R5, R6, R7, R8}
   95 0000008E F04F 0400       MOV              R4, #0
   96 00000092 EB06 0408       ADD              R4, R6, R8
   97 00000096 E92D 01E0       PUSH             {R5, R6, R7, R8}
   98 0000009A 4D15            LDR              R5,=FIRST   ;
   99 0000009C F7FF FFFE       BL               CONVRT
  100 000000A0 4D13            LDR              R5,=FIRST   ;   
  101 000000A2         ;PUSH{LR}
  102 000000A2 F7FF FFFE       BL               OutStr
  103 000000A6 E8BD 01E0       POP              {R5, R6, R7, R8}
  104 000000AA         ;POP{LR}   
  105 000000AA E92D 01E0       PUSH             {R5, R6, R7, R8}
  106 000000AE 4D12            LDR              R5,=MSG2
  107 000000B0 F7FF FFFE       BL               OutStr
  108 000000B4 E8BD 01E0       POP              {R5, R6, R7, R8}
  109 000000B8 FBB8 F4F4       UDIV             R4, R8, R4
  110 000000BC F04F 0A64       MOV              R10, #100
  111 000000C0 FB04 F40A       MUL              R4, R4, R10
  112 000000C4 E92D 01E0       PUSH             {R5, R6, R7, R8}
  113 000000C8 4D09            LDR              R5,=FIRST   ;
  114 000000CA F7FF FFFE       BL               CONVRT
  115 000000CE 4D08            LDR              R5,=FIRST   ;   
  116 000000D0         ;PUSH{LR}
  117 000000D0 F7FF FFFE       BL               OutStr
  118 000000D4 E8BD 01E0       POP              {R5, R6, R7, R8}
  119 000000D8         ;POP{LR}
  120 000000D8         
  121 000000D8 E79F            B                loop
  122 000000DA 00 00           ALIGN
  123 000000DC                 END
              4003101C 
              40031024 
              400053FC 
              40031048 



ARM Macro Assembler    Page 4 


              00000000 
              20000480 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MSG 00000000

Symbol: MSG
   Definitions
      At line 20 in file __main.s
   Uses
      At line 78 in file __main.s
Comment: MSG used once
MSG1 0000000E

Symbol: MSG1
   Definitions
      At line 23 in file __main.s
   Uses
      At line 92 in file __main.s
Comment: MSG1 used once
MSG2 00000017

Symbol: MSG2
   Definitions
      At line 26 in file __main.s
   Uses
      At line 106 in file __main.s
Comment: MSG2 used once
sdata 00000000

Symbol: sdata
   Definitions
      At line 18 in file __main.s
   Uses
      None
Comment: sdata unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CONT 00000058

Symbol: CONT
   Definitions
      At line 76 in file __main.s
   Uses
      At line 69 in file __main.s
Comment: CONT used once
NEGATIVE 0000004C

Symbol: NEGATIVE
   Definitions
      At line 70 in file __main.s
   Uses
      At line 62 in file __main.s
Comment: NEGATIVE used once
POSITIVE 00000040

Symbol: POSITIVE
   Definitions
      At line 65 in file __main.s
   Uses
      At line 63 in file __main.s
Comment: POSITIVE used once
__main 00000000

Symbol: __main
   Definitions
      At line 38 in file __main.s
   Uses
      At line 36 in file __main.s
Comment: __main used once
loop 0000001A

Symbol: loop
   Definitions
      At line 47 in file __main.s
   Uses
      At line 50 in file __main.s
      At line 74 in file __main.s
      At line 121 in file __main.s

main 00000000

Symbol: main
   Definitions
      At line 30 in file __main.s
   Uses
      None
Comment: main unused
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FIRST 20000480

Symbol: FIRST
   Definitions
      At line 16 in file __main.s
   Uses
      At line 84 in file __main.s
      At line 86 in file __main.s
      At line 98 in file __main.s
      At line 100 in file __main.s
      At line 113 in file __main.s
      At line 115 in file __main.s

FREQ 00F42400

Symbol: FREQ
   Definitions
      At line 17 in file __main.s
   Uses
      None
Comment: FREQ unused
GPIO_PORTB_DATA 400053FC

Symbol: GPIO_PORTB_DATA
   Definitions
      At line 1 in file __main.s
   Uses
      At line 55 in file __main.s
Comment: GPIO_PORTB_DATA used once
TIMER1_CFG 40031000

Symbol: TIMER1_CFG
   Definitions
      At line 4 in file __main.s
   Uses
      None
Comment: TIMER1_CFG unused
TIMER1_CTL 4003100C

Symbol: TIMER1_CTL
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: TIMER1_CTL unused
TIMER1_ICR 40031024

Symbol: TIMER1_ICR
   Definitions
      At line 8 in file __main.s
   Uses
      At line 52 in file __main.s
Comment: TIMER1_ICR used once
TIMER1_IMR 40031018

Symbol: TIMER1_IMR
   Definitions
      At line 13 in file __main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      None
Comment: TIMER1_IMR unused
TIMER1_RIS 4003101C

Symbol: TIMER1_RIS
   Definitions
      At line 7 in file __main.s
   Uses
      At line 47 in file __main.s
Comment: TIMER1_RIS used once
TIMER1_TAILR 40031028

Symbol: TIMER1_TAILR
   Definitions
      At line 9 in file __main.s
   Uses
      None
Comment: TIMER1_TAILR unused
TIMER1_TAMATCHR 40031030

Symbol: TIMER1_TAMATCHR
   Definitions
      At line 10 in file __main.s
   Uses
      None
Comment: TIMER1_TAMATCHR unused
TIMER1_TAMR 40031004

Symbol: TIMER1_TAMR
   Definitions
      At line 5 in file __main.s
   Uses
      None
Comment: TIMER1_TAMR unused
TIMER1_TAPR 40031038

Symbol: TIMER1_TAPR
   Definitions
      At line 11 in file __main.s
   Uses
      None
Comment: TIMER1_TAPR unused
TIMER1_TAR 40031048

Symbol: TIMER1_TAR
   Definitions
      At line 12 in file __main.s
   Uses
      At line 57 in file __main.s
Comment: TIMER1_TAR used once
TIMER1_TAV 40031050

Symbol: TIMER1_TAV
   Definitions
      At line 14 in file __main.s
   Uses
      None
Comment: TIMER1_TAV unused
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

CONVRT 00000000

Symbol: CONVRT
   Definitions
      At line 35 in file __main.s
   Uses
      At line 85 in file __main.s
      At line 99 in file __main.s
      At line 114 in file __main.s

OutStr 00000000

Symbol: OutStr
   Definitions
      At line 34 in file __main.s
   Uses
      At line 79 in file __main.s
      At line 88 in file __main.s
      At line 93 in file __main.s
      At line 102 in file __main.s
      At line 107 in file __main.s
      At line 117 in file __main.s

PULSE_INIT 00000000

Symbol: PULSE_INIT
   Definitions
      At line 32 in file __main.s
   Uses
      At line 40 in file __main.s
Comment: PULSE_INIT used once
READ_INIT 00000000

Symbol: READ_INIT
   Definitions
      At line 33 in file __main.s
   Uses
      At line 39 in file __main.s
Comment: READ_INIT used once
4 symbols
364 symbols in table
