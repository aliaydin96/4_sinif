


ARM Macro Assembler    Page 1 


    1 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    2 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                            
    3 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    4 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; ISC
    5 00000000         ;LABEL  DIRECTIVE VALUE  COMMENT
    6 00000000                 AREA             main, READONLY, CODE
    7 00000000                 THUMB
    8 00000000                 IMPORT           Init_ADC    ; Initialize subrou
                                                            tine
    9 00000000                 IMPORT           OutChar     ;
   10 00000000                 EXPORT           __main      ; Make available
   11 00000000         __main
   12 00000000 F7FF FFFE       BL               Init_ADC    ; GPIO & ADC initia
                                                            lized
   13 00000004 F04F 0600       MOV              R6,#0       ;
   14 00000008 4927    getsample
                               LDR              R1,=ADC0_PSSI 
                                                            ; request a sample
   15 0000000A 680A            LDR              R2,[R1]     ;
   16 0000000C F042 0208       ORR              R2,R2,#0x08 ; get a sample
   17 00000010 600A            STR              R2,[R1]     ;
   18 00000012         
   19 00000012 4926    loop    LDR              R1,=ADC0_RIS ; check for interr
                                                            up flag
   20 00000014 680A            LDR              R2,[R1]     ;
   21 00000016 F012 0208       ANDS             R2,#0x08    ;
   22 0000001A D0FA            BEQ              loop
   23 0000001C         
   24 0000001C 4924            LDR              R1,=ADC0_ISC ; clear the interr
                                                            upt flag
   25 0000001E 680A            LDR              R2,[R1]     ;
   26 00000020 F042 0208       ORR              R2,#0x08    ;
   27 00000024 600A            STR              R2,[R1]     ; Interrupt flag is
                                                             cleared
   28 00000026         
   29 00000026 4923            LDR              R1,=ADC0_SSFIFO3 ;
   30 00000028 680A            LDR              R2,[R1]     ; R2 is the data
   31 0000002A         
   32 0000002A EBA2 0006       SUB              R0,R2,R6    ; check sampled dat
                                                            a - previous > 0.02
                                                            
   33 0000002E 2818            CMP              R0,#24      ;
   34 00000030 DC03            BGT              move        ;
   35 00000032 EBA6 0002       SUB              R0,R6,R2    ;
   36 00000036 2818            CMP              R0,#24      ; check previous - 
                                                            sampled data > 0.02
                                                            
   37 00000038 DBE6            BLT              getsample   ;
   38 0000003A         
   39 0000003A 4616    move    MOV              R6,R2       ;



ARM Macro Assembler    Page 2 


   40 0000003C F240 40D9       MOV              R0,#1241    ; get the first dig
                                                            it
   41 00000040 FBB2 F1F0       UDIV             R1,R2,R0    ;
   42 00000044 460D            MOV              R5,R1       ;
   43 00000046 F105 0530       ADD              R5,R5,#0x30 ; ascii conversion
   44 0000004A B407            PUSH{R0,R1,R2}
   45 0000004C F7FF FFFE       BL               OutChar     ; print
   46 00000050 BC07            POP{R0,R1,R2}
   47 00000052         
   48 00000052 F04F 052E       MOV              R5,#0x2E    ; for '.'
   49 00000056 B407            PUSH{R0,R1,R2}
   50 00000058 F7FF FFFE       BL               OutChar     ; print
   51 0000005C BC07            POP{R0,R1,R2}
   52 0000005E         
   53 0000005E FB01 F100       MUL              R1,R1,R0    ;
   54 00000062 EBA2 0201       SUB              R2,R2,R1    ; R2 is newed
   55 00000066 F04F 007C       MOV              R0,#124     ; get the second di
                                                            git
   56 0000006A FBB2 F1F0       UDIV             R1,R2,R0    ;
   57 0000006E 460D            MOV              R5,R1       ;
   58 00000070 F105 0530       ADD              R5,R5,#0x30 ; ascii conversion
   59 00000074 B407            PUSH{R0,R1,R2}
   60 00000076 F7FF FFFE       BL               OutChar     ; print
   61 0000007A BC07            POP{R0,R1,R2}
   62 0000007C         
   63 0000007C FB01 F100       MUL              R1,R1,R0    ;
   64 00000080 EBA2 0201       SUB              R2,R2,R1    ; R2 is newed
   65 00000084 F04F 000C       MOV              R0,#12      ; get the last digi
                                                            t
   66 00000088 FBB2 F1F0       UDIV             R1,R2,R0    ;
   67 0000008C 460D            MOV              R5,R1       ;
   68 0000008E F105 0530       ADD              R5,R5,#0x30 ; ascii conversion
   69 00000092 B407            PUSH{R0,R1,R2}
   70 00000094 F7FF FFFE       BL               OutChar     ; print
   71 00000098 BC07            POP{R0,R1,R2}
   72 0000009A         
   73 0000009A F04F 050D       MOV              R5,#0x0D    ; for new line
   74 0000009E B407            PUSH{R0,R1,R2}
   75 000000A0 F7FF FFFE       BL               OutChar     ; print
   76 000000A4 BC07            POP{R0,R1,R2}
   77 000000A6         
   78 000000A6 E7AF            B                getsample   ;
   79 000000A8         
   80 000000A8         
   81 000000A8                 ALIGN
   82 000000A8                 END
              40038028 
              40038004 
              4003800C 
              400380A8 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

__main 00000000

Symbol: __main
   Definitions
      At line 11 in file __main.s
   Uses
      At line 10 in file __main.s
Comment: __main used once
getsample 00000008

Symbol: getsample
   Definitions
      At line 14 in file __main.s
   Uses
      At line 37 in file __main.s
      At line 78 in file __main.s

loop 00000012

Symbol: loop
   Definitions
      At line 19 in file __main.s
   Uses
      At line 22 in file __main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: main unused
move 0000003A

Symbol: move
   Definitions
      At line 39 in file __main.s
   Uses
      At line 34 in file __main.s
Comment: move used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 4 in file __main.s
   Uses
      At line 24 in file __main.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 3 in file __main.s
   Uses
      At line 14 in file __main.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 1 in file __main.s
   Uses
      At line 19 in file __main.s
Comment: ADC0_RIS used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 2 in file __main.s
   Uses
      At line 29 in file __main.s
Comment: ADC0_SSFIFO3 used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Init_ADC 00000000

Symbol: Init_ADC
   Definitions
      At line 8 in file __main.s
   Uses
      At line 12 in file __main.s
Comment: Init_ADC used once
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 9 in file __main.s
   Uses
      At line 45 in file __main.s
      At line 50 in file __main.s
      At line 60 in file __main.s
      At line 70 in file __main.s
      At line 75 in file __main.s

2 symbols
347 symbols in table
